<!DOCTYPE html>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<html>
    <head>
        <title>The Breviary So Far</title>
        <meta charset="UTF-8">
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.js"></script>
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.js"></script>
        <link rel="stylesheet" href="../brokenBooks/css/brokenbooks.css">
        <style>
            .range{
                border: 2px solid red;
                margin: 16px 5px;
                display: block;
                position: relative;
            }
            .range .range{
                border: 2px solid purple;
                margin: 16px 85px;
            }

            .range .range .range{
                border: 2px solid orange;
                margin: 16px 80px;
            }
            .range .range .range .range{
                border: 2px solid green;
                margin: 16px 80px;
            }
            .canvas{
                border: 2px solid blue;
                display: inline-block;
                position: relative;
                overflow: hidden;
                margin: 5px 6px;
                height: 300px;
                width: 200px;
            }

            .canvasImg{
              height: 300px;
              width: 200px;
              position:relative;
            }
            .canvasinner{
              overflow: hidden;
              position: relative;
            }
            div[fragment="true"]{
              margin: 2px 0px;
            }
            .bucketPage{
              border: 4px solid white;
            }
            .fragment{
              border: 1px solid black;
              position: absolute;
              background: yellow;
              opacity: .3;
            }
            .framgment:hover{
              border: 3px solid yellow;
            }
            .annotation{
                border: 1px solid green;
                position: absolute;
            }
            .canvasImgFragment{
              width: 100%;
              height: 100%;
              position:relative;
            }
        </style>
    </head>
    <body>
        <div class="mainBlock" id="focusedRange">
            <button onclick="getAllRanges();">SORT RANGES LIVE</button>
            <button onclick="organizeRanges();">SORT RANGES LOCAL</button>
        </div>
        <div class="sideBarInfo">
            <div class="manifestData"></div>
            <div id="manifestRanges"></div>
        </div>
    </body>
</html>
<script>
//range collection can be looked at like the master range.  If we ever hope to keep these in order, there must be a range that accounts for all of them from which we can change the indexes around.  

//THE LEAF IS THE SMALLEST INDEPENDANT RANGE: pcuba

//we will have to create smaller ranges than leaves to be able to create image fragments.  A new section can start 2/3 down the canvas, so the first page of the next section is the bottom 3rd of that image.  

//atomic/indivisible ranges can have canvases that if you move that canvas, you have to move the range. 


//GOAL: Represent the second half of the last page of section 1 to be the start section 2.  
var annotationLists = [
    // {
    //   "@id" : "http://www.example.org/iiif/LlangBrev/annoList/1",
    //   "@type" : "sc:AnnotationLists",
    //   "label" : "Fragments",
    //   "resources" : [ {
    //     "@id" : "http://www.example.org/iiif/LlangBrev/anno/1",
    //     "@type" : "oa:Annotation",
    //     "motivation" : "sc:painting",
    //     "resource" : {
    //       "@id" : "http://www.yoyowall.com/wp-content/uploads/2013/03/Abstract-Colourful-Cool.jpg",
    //       "@type" : "dctypes:Image",
    //       "format" : "image/jpeg",
    //       "height" : 50,
    //       "width" : 150
    //     },
    //     "on" : "http://www.example.org/iiif/LlangBrev/canvas/1#xywh=10,15,150,50"
    //   },
    //   {
    //     "@type" : "oa:Annotation",
    //     "motivation" : "sc:painting",
    //     "resource" : {
    //       "@type" : "cnt:ContentAsText",
    //       "cnt:chars" : "This is an image fragment."
    //     },
    //     "on" : "http://www.example.org/iiif/LlangBrev/canvas/1"
    //   }
    // ]
    // }
];
var pageCanvases = [

  {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/1",
          "@type" : "sc:Canvas",
          "label" : "Llang_01_fragment",
          "height" : 300,
          "width" : 200,
          "images" : [
          {
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://www.yoyowall.com/wp-content/uploads/2013/03/Abstract-Colourful-Cool.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                "height" : 2365,
                "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/1"
          }
          ],
          "otherContent":[]
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/2",
          "@type" : "sc:Canvas",
          "label" : "Llang_002",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://funlava.com/wp-content/uploads/2013/03/cool-hd-wallpapers.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/2"
          }],
          "otherContent":[]
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/3",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSRYZAj0K5SiHcZonHG--GrygYLgnjhSXX35BfapUckYLB7fKYI",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/3"
          }],
          "otherContent":[]
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/4",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://i.huffpost.com/gen/1719761/images/o-COOL-CAT-facebook.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/4"
          }],
          "otherContent":[]
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/5",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://cloud-4.steamusercontent.com/ugc/43108316458046990/EC4110525593F4CC213E69257ABE6F0BE1D18D9A/",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/5"
          }],
          "otherContent":[]
         
   },
    {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/6",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://www.hdwallpaperscool.com/wp-content/uploads/2014/06/amazing-backgrounds-cool-wallpapers-of-high-resolution.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/6"
          }],
          "otherContent":[]
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/7",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://t3.gstatic.com/images?q=tbn:ANd9GcR-CUW-EqZ7WboySAFm_3oQH9xLbxZsSHu2EyPsQ8gCObts0-nJ",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/7"
          }],
          "otherContent":[]
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/8",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://t1.gstatic.com/images?q=tbn:ANd9GcQM3TBh35_znmOW65GdTY1u6WZCa5smnvv_s1nIJl355iaqIBeVGg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/8"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/9",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://www.darveshtv.com/wp-content/uploads/2015/02/cool_car_3d_wallpapers_hot.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/9"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/10",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://ajournalofmusicalthings.com/wp-content/uploads/Cool.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/10"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/11",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://upload.wikimedia.org/wikipedia/commons/2/20/Cool,_Calif_sign.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/11"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/12",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://t1.gstatic.com/images?q=tbn:ANd9GcT_cVgwB1vOupPsjjiGbnPrkK24fpq9BThi3fkVNrgoX0oMNwzv0w",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/12"
          }],
          "otherContent":[],      
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/13",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://t0.gstatic.com/images?q=tbn:ANd9GcTLM1VY3Ehp3F1hd78mrszS3euO32XV-BjtgXaaKNcRJ8je3ECmZg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/13"
          }],
          "otherContent":[],       
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/14",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://browsewallpaper.com/wp-content/uploads/2014/11/cool%20designs%20wallpaper-cKAa.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/14"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/15",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://www.desktopaper.com/wp-content/uploads/great-cool-design-backgrounds.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/15"
          }],
          "otherContent":[],      
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/16",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Haliaeetus_leucocephalus_-Skagit_valley-8-2c.jpg/300px-Haliaeetus_leucocephalus_-Skagit_valley-8-2c.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/16"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/17",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://www.chicagonow.com/greenamajigger/files/2013/04/bee-eater_1627477i.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/17"
          }],
          "otherContent":[],       
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/18",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://www.arizonafoothillsmagazine.com/images/stories/aug13/Butterfly_Blue.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/18"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/19",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/Butterflies_%28Costa_Rica%29.jpg/800px-Butterflies_%28Costa_Rica%29.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/19"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/20",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://www.slu.edu/Images/marketing_communications/logos/slu/slu_2c.bmp",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/20"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/21",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://vaccinenewsdaily.com/wp-content/uploads/2015/01/SLU_Vert_blue.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/21"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/22",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://rbrua3v80lj2rulsf7iqfnpmf.wpengine.netdna-cdn.com/wp-content/uploads/2014/10/St_Louis_Blues3.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/22"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/23",
          "@type" : "sc:Canvas",
          "label" : "Llang_03",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://www.sports-logos-screensavers.com/user/St_Louis_Blues4.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/23"
          }],
          "otherContent":[],
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/24",
          "@type" : "sc:Canvas",
          "label" : "Llang_24",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://p1.pichost.me/i/39/1623860.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/24"
          }],
          "otherContent":[]
         
   },
   {
      //This will be the anchor canvas in the anchor range
          "@id" : "http://www.example.org/iiif/LlangBrev/canvas/25",
          "@type" : "sc:Canvas",
          "label" : "Llang_25",
          "height" : 300,
          "width" : 200,
          "images" : [{
              "@type" : "oa:Annotation",
              "motivation" : "sc:painting",
              "resource" : {
                "@id" : "http://webjazba.com/sw-store/images/wallpapers/webjazba.com-297742013.jpg",
                "@type" : "dctypes:Image",
                "format" : "image/jpeg",
                // "height" : 2365,
                // "width" : 1579
              },
              "on" : "http://www.example.org/iiif/LlangBrev/canvas/25"
          }],
          "otherContent":[]
         
   }
];

var rangeCollection = [
{
  "@id":"http://www.example.org/iiif/LlangBrev/range/1",
  "@type":"sc:Range",
  "label":"Folio 1",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/4", "http://www.example.org/iiif/LlangBrev/canvas/5"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{ //A connection of content can be made like this, but not fragments
  "@id":"http://www.example.org/iiif/LlangBrev/range/2",
  "@type":"sc:Range",
  "label":"Folio 2",
  "ranges" : [
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/1", "http://www.example.org/iiif/LlangBrev/canvas/2"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{//A connection of content can be made like this, but not fragments
  "@id":"http://www.example.org/iiif/LlangBrev/range/3",
  "@type":"sc:Range",
  "label":"Folio 3",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/2", "http://www.example.org/iiif/LlangBrev/canvas/3"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/203",
  "@type":"sc:Range",
  "label":"Weird Folio 2",
  "ranges" : [
      "http://www.example.org/iiif/LlangBrev/range/2"
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/2#xywh=0,0,200,75"],
  //This will only work for image fragments when each fragment is its own canvas.  Either in the canavas or the range we must mark it as a fragment. 
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/204",
  "@type":"sc:Range",
  "label":"Weird Folio 3",
  "ranges" : [
      "http://www.example.org/iiif/LlangBrev/range/3"
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/2#xywh=0,75,200,75"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/404",
  "@type":"sc:Range",
  "label":"Weird Folio 3",
  "ranges" : [
      "http://www.example.org/iiif/LlangBrev/range/3"
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/2#xywh=0,150,200,150"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/4",
  "@type":"sc:Range",
  "label":"Folio 4",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/24", "http://www.example.org/iiif/LlangBrev/canvas/25"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/5",
  "@type":"sc:Range",
  "label":"Folio 5",
  "ranges" : [
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/6", "http://www.example.org/iiif/LlangBrev/canvas/7"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/6",
  "@type":"sc:Range",
  "label":"Folio 6",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/8", "http://www.example.org/iiif/LlangBrev/canvas/9"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/7",
  "@type":"sc:Range",
  "label":"Folio 7: What do you think?",
  "ranges" : [
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/10", "http://www.example.org/iiif/LlangBrev/canvas/11"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/102",
  "@type":"sc:Range",
  "label":"First Folio, Last Secion",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/12", "http://www.example.org/iiif/LlangBrev/canvas/13"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},
{
  "@id":"http://www.example.org/iiif/LlangBrev/range/103",
  "@type":"sc:Range",
  "label":"Last Folio, Last Secion",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/14","http://www.example.org/iiif/LlangBrev/canvas/15"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/104",
  "@type":"sc:Range",
  "label":"Unknown Folio X, Last Secion",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/16","http://www.example.org/iiif/LlangBrev/canvas/17"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/105",
  "@type":"sc:Range",
  "label":"Unknown Folio Y, Last Secion",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/18", "http://www.example.org/iiif/LlangBrev/canvas/19"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/106",
  "@type":"sc:Range",
  "label":"Last Section",
  "ranges" : [
     "http://www.example.org/iiif/LlangBrev/range/102",
     "http://www.example.org/iiif/LlangBrev/range/103",
     "http://www.example.org/iiif/LlangBrev/range/105",
     "http://www.example.org/iiif/LlangBrev/range/104",
   ],
  "canvases" :[],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
}, //EX: we know this is the last section.  Here are 4 pages we know are in it.  It is not inside the table of contents array.

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/8",
  "@type":"sc:Range",
  "label":"Section 1",
  "ranges" : ["http://www.example.org/iiif/LlangBrev/range/1", "http://www.example.org/iiif/LlangBrev/range/2"],
  "canvases" :[],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/9",
  "@type":"sc:Range",
  "label":"Section 2",
  "ranges" : ["http://www.example.org/iiif/LlangBrev/range/3", "http://www.example.org/iiif/LlangBrev/range/4"],
  "canvases" :[],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/10",
  "@type":"sc:Range",
  "label":"Section 3",
  "ranges" : ["http://www.example.org/iiif/LlangBrev/range/5", "http://www.example.org/iiif/LlangBrev/range/6"],
  "canvases" :[],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/11",
  "@type":"sc:Range",
  "label":"Table Of Contents",
  "ranges" : ["http://www.example.org/iiif/LlangBrev/range/8", "http://www.example.org/iiif/LlangBrev/range/9", "http://www.example.org/iiif/LlangBrev/range/10"],
  "canvases" :[],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/110",
  "@type":"sc:Range",
  "label":"SLU Folio, unknown section",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/20", "http://www.example.org/iiif/LlangBrev/canvas/21"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

{
  "@id":"http://www.example.org/iiif/LlangBrev/range/111",
  "@type":"sc:Range",
  "label":"Not sure if this is in this project.",
  "ranges" : [
      //add leaf ranges here in order for page order
  ],
  "canvases" :["http://www.example.org/iiif/LlangBrev/canvas/22", "http://www.example.org/iiif/LlangBrev/canvas/23"],
  "isPartOf": "http://www.example.org/iiif/LlangBrev/sequence/normal"
},

]

function getAllRanges(){
  //THERE WILL AT LEAST BE ONE RANGE
  var properties={"@type" : "sc:Range"};
  var url="http://localhost:8080/brokenBooks/getAnnotationByPropertiesServlet";
  var params = {"content" : JSON.stringify(properties)};
  console.log("GET RANGES LIVE");
  $.post(url, params, function(data){
     console.log("Got ranges");
     rangeCollection = JSON.parse(data);
     getAllCanvases();
  });
}

function getAllAnnotations(){
  //THERE MAY BE NO ANNOTATIONS
  var properties={"@type" : "sc:AnnotationList"};
  var url="http://localhost:8080/brokenBooks/getAnnotationByPropertiesServlet"
  var params = {"content" : JSON.stringify(properties)};
  $.post(url, params, function(data){
     annotationLists = JSON.parse(data);
     console.log("Got annotations");
     organizeRanges();
  });
}

function getAllCanvases(){
  //THERE WILL AT LEAST BE 2 CANVASES
  var properties={"@type" : "sc:Canvas"};
  var url="http://localhost:8080/brokenBooks/getAnnotationByPropertiesServlet"
  var params = {"content" : JSON.stringify(properties)};
  $.post(url, params, function(data){
     pageCanvases = JSON.parse(data);
     console.log("got canvases")
     getAllAnnotations();
  });
}

/*
* @params: rangeCollection: an array containing all the ranges of a project.  It is sorted so the array contains ranges from smallest to largest. 
*For now, it is a global array.  It will most likely be handed in as a parameter to the function in the future. 
*Builds the tree structure of ranges from an ordered list of ranges (by size of their ranges[] field).
*/

//Think about sorted vs. unsorted ranges. 
function organizeRanges(){
  console.log("Organizing Ranges");
    rangeCollection = mergeSort(rangeCollection);
    var existingRanges = [];
    for(var i = rangeCollection.length - 1; i>=0; i--){
      //console.log("Building Range");
      //console.log(rangeCollection[i]);
        var outerRange = rangeCollection[i]; //We have to look at each range, so at some point each range is the outer range...
        var outerRangeLabel = rangeCollection[i].label;
        var existingRangeToUpdate = ""; 

        if($.inArray(rangeCollection[i]["@id"], existingRanges) == -1){
          existingRanges.push(rangeCollection[i]["@id"]);
        }
        else{
          existingRangeToUpdate = $('div[rangeID="'+rangeCollection[i]["@id"]+'"]'); // get it.
        }
        
        //Create an html range object that can be added
        var currentRange = $("<div class='range' rangeID='"+rangeCollection[i]["@id"]+"'><div>"+outerRangeLabel+"</div></div>");
        //Collect the inner ranges for this range.  It will be an array(0) if there are none. 
        var innerRanges = rangeCollection[i].ranges;
        //obvious
        if(innerRanges.length > 0 &&  rangeCollection[i].canvases.length === 0){ //If there are inner ranges
         //console.log("Working inner ranges.")
            for(var j = 0; j<innerRanges.length;j++){ //go over each inner range
                var thisRange = innerRanges[j];
                $.each(rangeCollection, function(){ //check each range in the collection
                    if(this["@id"] === thisRange){ //find the object by ID among the collection.  When you find it, gets its information.
                        var thisLabel = this.label;
                        var embedRange = $("<div class='range' rangeID='"+this['@id']+"'><div>"+thisLabel+"</div></div>"); //Create an html range object for the inner range.
                        if($.inArray(this["@id"], existingRanges) == -1){
                          existingRanges.push(this["@id"]);
                        }
                        if(existingRangeToUpdate !== ""){ // If it is an existing range, then embed this range in the existing range.
                          existingRangeToUpdate.append(embedRange);
                        }
                        else{ //otherwise, it is a new range that this embedded range goes into.  Embed it, then add the parent/child structure to the DOM. 
                          currentRange.append(embedRange);
                          $("#focusedRange").append(currentRange);
                        }
                    } //If you didn't find it among the collection, we can't do anything with it.  
                });
            }
        }
        else if(innerRanges.length ===1 &&  rangeCollection[i].canvases.length === 1){//special case.  These ranges are meant to replace canvases of this leaf with fragments of this canvas.  We have made fragments atomic ranges so that pieces of the same canvas that exist in different ranges can be connected.  They will exist as their own entity on each individual leaf so that they can have their own annotation, but they will be connected by location with the canvas no matter where it exists.  This code will be reached before the code in the else every time because of the ordered array by range field size.  Fortunately, there will only be up to two ranges in here.  Those ranges will be URI's of leaves. Therefore, we can directly grab that leaf from the array.  We can cheat a bit and start from the i we are at since we know it does not come before this one.
          var canvasToReplace = rangeCollection[i].canvases[0];
          var subStr = canvasToReplace.substring(0,canvasToReplace.indexOf("#xywh"));
          for(var x=0; x<i; x++){
            //we know there is only one
            var innerRangeSubstring = innerRanges[0];
            if(innerRanges[0].indexOf("#xywh") > -1) innerRangeSubstring = innerRanges[0].substring(0, innerRanges[0].indexOf("#xywh"));
            var leafRangeCanvases= rangeCollection[x].canvases;
            if (rangeCollection[x]["@id"] == innerRangeSubstring){
              //replace the canvas in the leaf range with the canvas from the inner range
                var l = -1;
                $.each(leafRangeCanvases, function(){
                  l++;
                  if(this == subStr){
                    rangeCollection[x].canvases[l] = canvasToReplace;
                  }
                  else{ //this could be the wrong canvases OR this could be the right canvas as a fragment.  If it is the right canvas as a fragment, there can be multiple fragments of that canvas, so add it in.  Otherwise, we should do nothing.  
                    if(this.indexOf("#xywh") > -1){
                      //it could be a fragment
                      var tmp = this;
                      if(tmp.indexOf("#xywh") > -1){ //If this is not true, it isn't possible that we are on the correct canvas.
                        tmp = tmp.substring(0, tmp.indexOf("#xywh")); //It is at least a fragment, but for the right canvas?  Strip #xyhw=.... off the URI
                        tmp += ""; //cast it to a string.
                        var tmpCompare = leafRangeCanvases[l].substring(0,leafRangeCanvases[l].indexOf("#xywh")); //Strip #xywh off the canvas we are checking equivalency to
                        tmpCompare += ""; // cast to a string
                        if(tmpCompare == tmp && $.inArray(canvasToReplace, leafRangeCanvases) < 0){ //Then it was a new fragment for this canvas, so we can push the fragment to this leaf. 
                           rangeCollection[x].canvases.splice(l+1, 0, canvasToReplace);
                           //place canavs in at appropriate location among canvases in case there are multiple fragments.  This will build them out in the order users think they go.  
                        }
                        else{
                          //it was the wrong canvas.  Leave it alone.
                        }  
                      }
                    }
                  }
                });
            }
            //What we have done is skipped further down into the array and altered a single canvas in a leaf.  When we get to that canvas in this function, it will not have any ranges so it will skip to the code below and build out the leaf.
          }
        }
        else{ //There are no inner ranges, so we must be on a leaf.  It MAY or MAY NOT contain an image or annotation, so account for finding none. 
          //console.log("Working on a leaf");
            var currentCanvases = outerRange.canvases;
            var firstCanvas = currentCanvases[0];
            if(firstCanvas.indexOf("#xywh") >=0){
              firstCanvas = firstCanvas.substring(0, firstCanvas.indexOf("#xywh"));
            }
            //console.log("Current Canvases");
            //console.log(currentCanvases);
            var a = false;
            var newLeaf = undefined;
            var rangeForCanvases = $("#focusedRange").find('div[rangeID="'+outerRange['@id']+'"]');
            if(rangeForCanvases.length > 0){ //if the range exists in a section
                //console.log("I know the outer range");
                //console.log(rangeForCanvases);
              a=true;
            }
            else{ //The leaf is  parent to itself, which means its a random page in the bucket. 
               // console.log("This is a new leaf");
              newLeaf = $("<div class='range bucketPage' rangeID='"+outerRange['@id']+"'><div>"+outerRange.label+"</div></div>");
            }

            var canvasHolder1 = $("<div sideA='' class='canvas'> </div>");
            var canvasHolder2 = $("<div sideB='' class='canvas'> </div>");

            var canvasHolder3 = $("<div sideA='' class='canvas'> <img class='canvasImg' src='http://img1.wikia.nocookie.net/__cb20130607215218/mummipedia/images/b/bb/480px-Placeholder.png' /> </div>");
            var canvasHolder4 = $("<div sideB='' class='canvas'> <img class='canvasImg' src='http://img1.wikia.nocookie.net/__cb20130607215218/mummipedia/images/b/bb/480px-Placeholder.png' /> </div>");


            var side1 = true;
            var side2 = false;

            var holderToAppend = $("");
            
            $.each(currentCanvases, function(){ //for whatever canvases there are, if any, or many fragments
              //console.log("Working on canvases");
              var originalCanvas = String(this);
              var currentCanvas = "";
              var fragment = false;
              
              if(originalCanvas.indexOf("#xywh") >= 0){
                currentCanvas = originalCanvas.substring(0, originalCanvas.indexOf("#xywh"));
                fragment =true;
              }
              else{
                currentCanvas = originalCanvas;
              }
              if(currentCanvas == firstCanvas){ //we are still on sideA
                side1 = true;
                side2 = false
              }
              else{ //we are on sideB
                side1=false;
                side2 = true;
              }
              var XYWHarray = [0,0,0,0];
              var XYWHsubstring = originalCanvas.substring(originalCanvas.lastIndexOf('#' + 1)); 
              var canvasImg = "";
              if(XYWHsubstring.indexOf('=') > -1){ //string must contain this to be valid
                  var numberArray = XYWHsubstring.substring(originalCanvas.lastIndexOf('xywh=') + 5).split(',');
                  if(numberArray.length === 4){ // string must have all 4 to be valid
                      var x = numberArray[0];
                      var y = numberArray[1];
                      var w = numberArray[2];
                      var h = numberArray[3];
                      XYWHarray = [x,y,w,h];
                  }
                  else{
                    //There is certainly something more useful we can do here. I just kill it if we do not have all the values.  
                    XYWHarray = [0,0,0,0];
                  }
              }
              //This part creates chunks and places them in the canvas.  We can show only cropped parts of the canvas
              // var canvasHTML = $("<div fragment='"+fragment+"' class='canvasinner'> <img class='canvasImg' src='' /></div>");
              //  $.each(pageCanvases, function(){
              //      if(this["@id"] == currentCanvas){ // === breaks it.  WHY!
              //          canvasHTML.find('img').attr('src', this.images[0].resource["@id"]);
              //          if(XYWHarray[2] == 0 || XYWHarray[3] == 0){ //well surely the height and width are not 0 if it is an image chunk...this is what I do if it is.
              //             canvasHTML.attr("style", "height:"+this.height+"px; width:"+this.width+"px");//set chunk height and width to canvas height and width.
              //             canvasHTML.find("img").attr("style", "top:-"+XYWHarray[1]+"px; left:-"+XYWHarray[0]+"px; ");
              //             if(side1){ //put it in side1.  
              //               canvasHolder1.append(canvasHTML);
              //               holderToAppend = canvasHolder1;
              //             }
              //             else{ //maybe we should check if side2 is true, but I'll just assume it
              //               canvasHolder2.append(canvasHTML);
              //               holderToAppend = canvasHolder2;
              //             }
              //          }
              //          else{ //the height and width of the fragment piece were not 0.
              //             canvasHTML.attr("style", "height:"+XYWHarray[3]+"px; width:"+XYWHarray[2]+"px");
              //             canvasHTML.find("img").attr("style", "top:-"+XYWHarray[1]+"px; left:-"+XYWHarray[0]+"px;");
              //             if(side1){//put it in side1.
              //               canvasHolder1.append(canvasHTML);
              //               holderToAppend = canvasHolder1;
              //             }
              //             else{//maybe we should check if side2 is true, but I'll just assume it
              //               canvasHolder2.append(canvasHTML);
              //               holderToAppend = canvasHolder2;
              //             }
              //          }
              //      }
              //  });

             // This part will create the canvas and highlight the fragmental pieces instead of cropping chunks.
              var fragmentHTML = $("<div class='fragment'></div>");
              $.each(pageCanvases, function(){
                   var left = parseInt(XYWHarray[0]);
                   var top = parseInt(XYWHarray[1]);
                   var width = parseInt(XYWHarray[2]) - 2; //acount for 2 2px borders
                   var height = parseInt(XYWHarray[3]) - 2; // account for 2 2px borders
                   var annotation = $("<div class='annotation'></div>");
                   if(this["@id"] == currentCanvas){ // The full canvas onto which to put fragments
                       //canvasHolder.attr("style", "height:"+this.height+"px; width:"+this.width+"px");
                      // console.log("Working on canvas images");
                       var currentCanvasAnnotations=[];
                       var currentCanvasAnnotationLists = [];
                       if(this["otherContent"]!== undefined && this["otherContent"].length >0){
                        console.log("Set annotation lists");
                        currentCanvasAnnotationLists = this.otherContent; //get the canvas annotations. 
                        currentCanvasAnnotations.push(annotationLists[0].resources); // local.  Comment out when running live
                       }
                       if(side1 && this.images.length>0){
                          canvasHolder3.find('img').attr("src", this.images[0].resource["@id"]);
                       }
                       else if (side2 && this.images.length>0){
                          canvasHolder4.find('img').attr("src", this.images[0].resource["@id"]);
                       }
                       if(fragment){ // if it is a fragment, we want the fragment box drawn in the canvas.
                          fragmentHTML.attr("style", "left:"+left+"px; top:"+top+"px; height:"+height+"px; width:"+width+"px");
                          if(side1){
                            canvasHolder3.append(fragmentHTML);
                          }
                          else{
                            canvasHolder4.append(fragmentHTML);
                          }
                       }
                       
//                      $.each(currentCanvasAnnotationLists, function(data1){ //get each annotationList's annotations
//                        console.log("SET Current Canvas ANNOTATIONS");
                        
                        // $.get(data1["@id"], function(data2){
                        //   console.log("ANNOLIST GET");
                        //     data=JSON.parse(data2);
                        //     currentCanvasAnnotations.push(data2.resources);
                        // }, function(data2){ //make that annotations are gathered, then run the code to append annos to their location.
                        //    var canvas = data2.on;
//                            var XYWHarray2 = [0,0,0,0];
//                            if(canvas.indexOf("#xywh") >= 0){
//                              var XYWHsubstring = canvas.substring(canvas.lastIndexOf('#' + 1)); 
//                              if(XYWHsubstring.indexOf('=') > -1){ //string must contain data1 to be valid
//                                  var numberArray = XYWHsubstring.substring(canvas.lastIndexOf('xywh=') + 5).split(',');
//                                  if(numberArray.length === 4){ // string must have all 4 to be valid
//                                      var x = numberArray[0];
//                                      var y = numberArray[1];
//                                      var w = numberArray[2];
//                                      var h = numberArray[3];
//                                      XYWHarray2 = [x,y,w,h];
//                                  }
//                                  else{
//                                    //There is certainly something more useful we can do here. I just kill it if we do not have all the values.  
//                                    XYWHarray2 = [0,0,0,0];
//                                  }
//                              }
//                              annotation.attr("style", "left: "+XYWHarray2[0]+"px; top: "+XYWHarray2[1]+"px; width: "+XYWHarray2[2]+"px; height: "+XYWHarray2[3]+"px;"    );
//                            }
//                            if(data1.resource["@type"] == "dctypes:Image"){
//                              var img = $("<img class='canvasImgFragment' src='"+data1.resource["@id"]+"'/>");
//                              annotation.addClass("imgFragment").append(img);
//                            }
//                            if(data1.resource["@type"] == "cnt:ContentAsText"){
//                              var text = data1.resource["cnt:chars"];
//                              annotation.attr("annoText", text);
//                            }
//                            if(side1){
//                              //console.log("Append anno to holder 1");
//                              canvasHolder3.append(annotation);
//                            }
//                            else{
//                                //console.log("Append anno to holder 2");
//                              canvasHolder4.append(annotation);
//                            }
                        // }); //Must comment this out when doing local demo.
 //                     }); //live 
 console.log(currentCanvasAnnotations);
                        for(var x=0; x<currentCanvasAnnotations.length; x++){
                            console.log(currentCanvasAnnotations[x]);
                            $.each(currentCanvasAnnotations[x], function(){
                             console.log(this);
                              var canvas = this.on;
                              var XYWHarray2 = [0,0,0,0];
                              if(canvas.indexOf("#xywh") >= 0){
                                var XYWHsubstring = canvas.substring(canvas.lastIndexOf('#' + 1)); 
                                if(XYWHsubstring.indexOf('=') > -1){ //string must contain this to be valid
                                    var numberArray = XYWHsubstring.substring(canvas.lastIndexOf('xywh=') + 5).split(',');
                                    if(numberArray.length === 4){ // string must have all 4 to be valid
                                        var x = numberArray[0];
                                        var y = numberArray[1];
                                        var w = numberArray[2];
                                        var h = numberArray[3];
                                        XYWHarray2 = [x,y,w,h];
                                    }
                                    else{
                                      //There is certainly something more useful we can do here. I just kill it if we do not have all the values.  
                                      XYWHarray2 = [0,0,0,0];
                                    }
                                }
                                annotation.attr("style", "left: "+XYWHarray2[0]+"px; top: "+XYWHarray2[1]+"px; width: "+XYWHarray2[2]+"px; height: "+XYWHarray2[3]+"px;");
                              }
                              if(this.resource["@type"] == "dctypes:Image"){
                                var img = $("<img class='canvasImgFragment' src='"+this.resource["@id"]+"'/>");
                                annotation.addClass("imgFragment").append(img);
                              }
                              if(this.resource["@type"] == "cnt:ContentAsText"){
                                var text = this.resource["cnt:chars"];
                                annotation.attr("annoText", text);
                              }
                              if(side1){
                                //console.log("Append anno to holder 1");
                                canvasHolder3.append(annotation);
                              }
                              else{
                                  //console.log("Append anno to holder 2");
                                canvasHolder4.append(annotation);
                              }
                            }); //must comment this out when running live
                        }
                        
                       //The canvas holders must be completely built before this part.  We may need to implement a timeout for now.  
                        if(a){ //if the range exists in a section
                           // console.log("Append canvases to range.");
                          rangeForCanvases.append(canvasHolder3, canvasHolder4); //put the canvas object in the range object (the leaf)
                        }
                        else{ //the range does not exist in a section, but rather as a parent range.  Add canvas to the new leaf
                            //console.log("Append canvases to new leaf");
                          newLeaf.append(canvasHolder3, canvasHolder4);
                        }
                        if(newLeaf){ //If its a random page from the bucket, it needs to listed as a parent range.  Append to DOM.
                          $("#focusedRange").append(newLeaf);
                         // console.log("append new leaf to DOM");
                          if($.inArray(newLeaf.attr("rangeID"), existingRanges) == -1){
                              existingRanges.push(newLeaf.attr("rangeID"));
                          }
                        }
                   }
              });
           });
        }
    }
}

/*
* Helper function for mergeSort().  It mergest the left and right arrays created when splitting the source array in the middle. 
*/
function merge(left, right){
    var result  = [],
        il      = 0,
        ir      = 0;

    while (il < left.length && ir < right.length){
        if (left[il].ranges.length < right[ir].ranges.length){
            result.push(left[il++]);
        } else {
            result.push(right[ir++]);
        }
    }

    return result.concat(left.slice(il)).concat(right.slice(ir));
}
/*
* The classic merge sort function that sorts an array of numbers from smallest to largest.  In our case, the array is an array of range objects, but what I test is the length of their ranges[] field, since those with the highest count in the ranges[] field will be top parent objects and the ordered array is easier to build the tree structure from.  Even for an array of 1000 ranges, this runs pretty quick.  
*/
function mergeSort(items){
    if (items.length < 2) {
        return items;
    }

    var middle = Math.floor(items.length / 2),
        left    = items.slice(0, middle),
        right   = items.slice(middle),
        params = merge(mergeSort(left), mergeSort(right));
    
    // Add the arguments to replace everything between 0 and last item in the array
    params.unshift(0, items.length);
    items.splice.apply(items, params);
    return items;
}
</script>